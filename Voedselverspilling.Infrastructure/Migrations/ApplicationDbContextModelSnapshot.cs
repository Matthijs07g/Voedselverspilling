// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Voedselverspilling.Infrastructure;

#nullable disable

namespace Voedselverspilling.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PakketProduct", b =>
                {
                    b.Property<int>("PakketenId")
                        .HasColumnType("int");

                    b.Property<int>("ProductenId")
                        .HasColumnType("int");

                    b.HasKey("PakketenId", "ProductenId");

                    b.HasIndex("ProductenId");

                    b.ToTable("PakketProduct");
                });

            modelBuilder.Entity("Voedselverspilling.Domain.Models.Kantine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsWarm")
                        .HasColumnType("bit");

                    b.Property<string>("Locatie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kantines");
                });

            modelBuilder.Entity("Voedselverspilling.Domain.Models.KantineWorker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Locatie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersoneelsNummer")
                        .HasColumnType("int");

                    b.Property<string>("Stad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Medewerker");
                });

            modelBuilder.Entity("Voedselverspilling.Domain.Models.Pakket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Is18")
                        .HasColumnType("bit");

                    b.Property<int>("KantineId")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Prijs")
                        .HasColumnType("float");

                    b.Property<string>("Stad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KantineId");

                    b.ToTable("Pakketten");
                });

            modelBuilder.Entity("Voedselverspilling.Domain.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAlcohol")
                        .HasColumnType("bit");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Producten");
                });

            modelBuilder.Entity("Voedselverspilling.Domain.Models.Reservering", b =>
                {
                    b.Property<int>("ReserveringId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReserveringId"));

                    b.Property<bool>("IsOpgehaald")
                        .HasColumnType("bit");

                    b.Property<int>("PakketId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservaringDatum")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TijdOpgehaald")
                        .HasColumnType("datetime2");

                    b.HasKey("ReserveringId");

                    b.HasIndex("PakketId");

                    b.HasIndex("StudentId");

                    b.ToTable("Reserveringen");
                });

            modelBuilder.Entity("Voedselverspilling.Domain.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Emailaddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("GeboorteDatum")
                        .HasColumnType("date");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentNummer")
                        .HasColumnType("int");

                    b.Property<int>("TelefoonNr")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Studenten");
                });

            modelBuilder.Entity("PakketProduct", b =>
                {
                    b.HasOne("Voedselverspilling.Domain.Models.Pakket", null)
                        .WithMany()
                        .HasForeignKey("PakketenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Voedselverspilling.Domain.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Voedselverspilling.Domain.Models.Pakket", b =>
                {
                    b.HasOne("Voedselverspilling.Domain.Models.Kantine", "Kantine")
                        .WithMany()
                        .HasForeignKey("KantineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kantine");
                });

            modelBuilder.Entity("Voedselverspilling.Domain.Models.Reservering", b =>
                {
                    b.HasOne("Voedselverspilling.Domain.Models.Pakket", "Pakket")
                        .WithMany()
                        .HasForeignKey("PakketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Voedselverspilling.Domain.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pakket");

                    b.Navigation("Student");
                });
#pragma warning restore 612, 618
        }
    }
}
